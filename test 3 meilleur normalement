-- Services nécessaires
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")

-- Création de la GUI principale
local gui = Instance.new("ScreenGui", CoreGui)
gui.Name = "PercyLeMeilleur_Hub"
gui.IgnoreGuiInset = true
gui.Enabled = true

-- Création du cadre principal
local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 400, 0, 300)
frame.Position = UDim2.new(0.5, -200, 0.5, -150)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

-- Création du bouton pour basculer la visibilité de la GUI
local toggleButton = Instance.new("TextButton", frame)
toggleButton.Size = UDim2.new(0, 100, 0, 50)
toggleButton.Position = UDim2.new(0.5, -50, 0, 10)
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
toggleButton.Text = "Masquer"
toggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleButton.TextSize = 20

-- Création du bouton "TP Joueur"
local tpButton = Instance.new("TextButton", frame)
tpButton.Size = UDim2.new(0, 100, 0, 50)
tpButton.Position = UDim2.new(0.5, -50, 0, 70)
tpButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
tpButton.Text = "TP Joueur"
tpButton.TextColor3 = Color3.fromRGB(255, 255, 255)
tpButton.TextSize = 20

-- Création du bouton "TP Boss"
local tpBossButton = Instance.new("TextButton", frame)
tpBossButton.Size = UDim2.new(0, 100, 0, 50)
tpBossButton.Position = UDim2.new(0.5, -50, 0, 130)
tpBossButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
tpBossButton.Text = "TP Boss"
tpBossButton.TextColor3 = Color3.fromRGB(255, 255, 255)
tpBossButton.TextSize = 20

-- Variable pour suivre l'état de la GUI
local guiVisible = true
local playerListVisible = false
local bossListVisible = false

-- Fonction pour basculer la visibilité de la GUI
local function toggleGUI()
    guiVisible = not guiVisible
    gui.Enabled = guiVisible
    toggleButton.Text = guiVisible and "Masquer" or "Afficher"
end

-- Fonction pour basculer la liste des joueurs
local function togglePlayerList()
    playerListVisible = not playerListVisible

    -- Si la liste est visible, afficher les joueurs
    if playerListVisible then
        local playerListFrame = Instance.new("Frame", frame)
        playerListFrame.Size = UDim2.new(0, 350, 0, 200)
        playerListFrame.Position = UDim2.new(0, 25, 0, 120)
        playerListFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        playerListFrame.BorderSizePixel = 0
        playerListFrame.Name = "PlayerListFrame"

        -- Ajouter les joueurs à la liste
        for _, otherPlayer in pairs(Players:GetPlayers()) do
            if otherPlayer ~= player then
                local playerButton = Instance.new("TextButton", playerListFrame)
                playerButton.Size = UDim2.new(0, 350, 0, 30)
                playerButton.Position = UDim2.new(0, 0, 0, (otherPlayer.UserId % 10) * 30)
                playerButton.Text = otherPlayer.Name
                playerButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
                playerButton.TextColor3 = Color3.fromRGB(255, 255, 255)

                playerButton.MouseButton1Click:Connect(function()
                    -- TP vers le joueur sélectionné
                    game:GetService("Workspace").CurrentCamera.CFrame = otherPlayer.Character.HumanoidRootPart.CFrame
                    playerListFrame:Destroy()  -- Cache la liste après la sélection
                end)
            end
        end
    else
        -- Si la liste n'est pas visible, cache la liste
        local playerListFrame = frame:FindFirstChild("PlayerListFrame")
        if playerListFrame then
            playerListFrame:Destroy()
        end
    end
end

-- Fonction pour basculer la liste des boss
local function toggleBossList()
    bossListVisible = not bossListVisible

    -- Si la liste est visible, afficher les boss
    if bossListVisible then
        local bossListFrame = Instance.new("Frame", frame)
        bossListFrame.Size = UDim2.new(0, 350, 0, 200)
        bossListFrame.Position = UDim2.new(0, 25, 0, 120)
        bossListFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        bossListFrame.BorderSizePixel = 0
        bossListFrame.Name = "BossListFrame"

        -- Ajouter les boss à la liste
        local bosses = {"Boss1", "Boss2", "Boss3"}  -- Remplace par tes noms de boss réels

        for _, boss in pairs(bosses) do
            local bossButton = Instance.new("TextButton", bossListFrame)
            bossButton.Size = UDim2.new(0, 350, 0, 30)
            bossButton.Position = UDim2.new(0, 0, 0, (_ - 1) * 30)
            bossButton.Text = boss
            bossButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
            bossButton.TextColor3 = Color3.fromRGB(255, 255, 255)

            bossButton.MouseButton1Click:Connect(function()
                -- TP vers le boss sélectionné (ici, utiliser une logique de téléportation de boss)
                local bossPos = game.Workspace:FindFirstChild(boss).Position
                game:GetService("Workspace").CurrentCamera.CFrame = CFrame.new(bossPos)
                bossListFrame:Destroy()  -- Cache la liste après la sélection
            end)
        end
    else
        -- Si la liste n'est pas visible, cache la liste
        local bossListFrame = frame:FindFirstChild("BossListFrame")
        if bossListFrame then
            bossListFrame:Destroy()
        end
    end
end

-- Événement pour détecter l'appui sur la touche "F"
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.F then
        toggleGUI()
    end
end)

-- Événement pour détecter le clic sur le bouton "TP Joueur"
tpButton.MouseButton1Click:Connect(togglePlayerList)

-- Événement pour détecter le clic sur le bouton "TP Boss"
tpBossButton.MouseButton1Click:Connect(toggleBossList)

-- Événement pour détecter le clic sur le bouton pour basculer la GUI
toggleButton.MouseButton1Click:Connect(toggleGUI)